<?php

/**
 * BaseAnswer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $session_id
 * @property integer $question_id
 * @property clob $answer
 * @property Question $Question
 * 
 * @method string   getSessionId()   Returns the current record's "session_id" value
 * @method integer  getQuestionId()  Returns the current record's "question_id" value
 * @method clob     getAnswer()      Returns the current record's "answer" value
 * @method Question getQuestion()    Returns the current record's "Question" value
 * @method Answer   setSessionId()   Sets the current record's "session_id" value
 * @method Answer   setQuestionId()  Sets the current record's "question_id" value
 * @method Answer   setAnswer()      Sets the current record's "answer" value
 * @method Answer   setQuestion()    Sets the current record's "Question" value
 * 
 * @package    phptest
 * @subpackage model
 * @author     Pascal Larocque
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAnswer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('answers');
        $this->hasColumn('session_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('question_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('answer', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));


        $this->index('idx_session_question', array(
             'fields' => 
             array(
              0 => 'session_id',
              1 => 'question_id',
             ),
             'type' => 'unique',
             ));
        $this->index('idx_session', array(
             'fields' => 
             array(
              0 => 'session_id',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Question', array(
             'local' => 'question_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}