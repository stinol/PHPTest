<?php

/**
 * BaseQuestion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $question_category_id
 * @property enum $validation_type
 * @property string $description
 * @property QuestionCategory $QuestionCategory
 * @property Doctrine_Collection $Answers
 * 
 * @method integer             getQuestionCategoryId()   Returns the current record's "question_category_id" value
 * @method enum                getValidationType()       Returns the current record's "validation_type" value
 * @method string              getDescription()          Returns the current record's "description" value
 * @method QuestionCategory    getQuestionCategory()     Returns the current record's "QuestionCategory" value
 * @method Doctrine_Collection getAnswers()              Returns the current record's "Answers" collection
 * @method Question            setQuestionCategoryId()   Sets the current record's "question_category_id" value
 * @method Question            setValidationType()       Sets the current record's "validation_type" value
 * @method Question            setDescription()          Sets the current record's "description" value
 * @method Question            setQuestionCategory()     Sets the current record's "QuestionCategory" value
 * @method Question            setAnswers()              Sets the current record's "Answers" collection
 * 
 * @package    phptest
 * @subpackage model
 * @author     Pascal Larocque
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseQuestion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('questions');
        $this->hasColumn('question_category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('validation_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'text',
              1 => 'email',
              2 => 'postalCode',
              3 => 'number',
             ),
             'notnull' => true,
             'default' => 'text',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('QuestionCategory', array(
             'local' => 'question_category_id',
             'foreign' => 'id'));

        $this->hasMany('Answer as Answers', array(
             'local' => 'id',
             'foreign' => 'question_id'));
    }
}